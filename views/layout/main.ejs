<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
</head>
<body>
<%- include('../components/header') %>
<section style="margin-top: 5%">
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search...">
                    <button class="btn btn-outline-secondary" type="button" id="searchButton">Search</button>
                </div>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="categoryDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Category
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="categoryDropdown" id="categoryList">
                        <!-- Category options will be dynamically added here -->
                    </ul>
                </div>
            </div>
        </div>
        <div class="row d-flex justify-content-center align-items-center h-100" style="margin-top: 5%" id="productContainer">
            <!-- Product cards will be dynamically added here -->
        </div>
    </div>
</section>
<%- include('../components/footer') %>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    axios.get('http://localhost:3000/api/product')
        .then(response => {
            const products = response.data.products;
            const productContainer = document.getElementById('productContainer');
            const searchInput = document.getElementById('searchInput');
            const searchButton = document.getElementById('searchButton');
            const categoryList = document.getElementById('categoryList');

            // Function to filter products based on search term and selected category
            function filterProducts(searchTerm, selectedCategory) {
                const filteredProducts = products.filter(product => {
                    return (
                        product.title.toLowerCase().includes(searchTerm.toLowerCase()) &&
                        (selectedCategory === 'All' || product.category === selectedCategory)
                    );
                });

                productContainer.innerHTML = '';

                filteredProducts.forEach(product => {
                    const card = document.createElement('div');
                    card.classList.add('col-md-4', 'mb-4');
                    card.innerHTML = `
                        <div class="card">
    <img src="${product.file[0]}" class="card-img-top" alt="Product Image" style="height: 200px object-fit: cover">
    <div class="card-body">
        <h5 class="card-title">${product.title}</h5>
        <p class="card-text">${product.description}</p>
        <p class="card-text"><strong>Category:</strong> ${product.category}</p>
        <p class="card-text"><strong>Quantity:</strong> ${product.quantity}</p>
        <p class="card-text"><strong>Price:</strong> ${product.price}</p>
        <div class="text-center">
            <form action="/api/cart/add/${product._id}" method="POST">
                <button type="submit" class="btn btn-success">Add to Cart</button>
            </form>
            <button type="button" class="btn btn-warning mb-1" onclick="window.location.href='/product/info/${product._id}'">
                About
            </button>
        </div>
    </div>
</div>
                    `;
                    productContainer.appendChild(card);
                });
            }

            // Function to populate category dropdown
            function populateCategories() {
                const categories = ['All', ...new Set(products.map(product => product.category))];
                categories.forEach(category => {
                    const listItem = document.createElement('li');
                    listItem.innerHTML = `<a class="dropdown-item" href="#" data-category="${category}">${category}</a>`;
                    categoryList.appendChild(listItem);
                });
            }

            populateCategories();
            filterProducts('', 'All');

            // Event listener for search button click
            searchButton.addEventListener('click', () => {
                const searchTerm = searchInput.value.trim();
                const selectedCategory = categoryList.querySelector('.active')?.dataset.category || 'All';
                filterProducts(searchTerm, selectedCategory);
            });

            // Event listener for category selection
            categoryList.addEventListener('click', (event) => {
                const target = event.target;
                if (target.matches('.dropdown-item')) {
                    const selectedCategory = target.dataset.category;
                    categoryList.querySelectorAll('.dropdown-item').forEach(item => item.classList.remove('active'));
                    target.classList.add('active');
                    const searchTerm = searchInput.value.trim();
                    filterProducts(searchTerm, selectedCategory);
                }
            });

            // Event listener for input change (live search)
            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.trim();
                const selectedCategory = categoryList.querySelector('.active')?.dataset.category || 'All';
                filterProducts(searchTerm, selectedCategory);
            });
        })
        .catch(error => {
            console.error('Error fetching data:', error);
        });
</script>
</body>
</html>

